:root {
  --color-accent: #5eead4;
  --color-highlight: #e2e8f0;
  --color-background: #81f6e4;
}


* {
  font-family: 'Inter', sans-serif;
  box-sizing: border-box;
  margin: 0;
  padding: 0;

}

body {
  background-color: #0f172a;
  color: #94a3b8;
  padding: 2rem 4rem 2rem 4rem;
  display: grid;
  grid-template-columns: repeat(1, minmax(0, 1fr));
  gap: 6rem;
}

hr {
opacity: 0.3;
}

p {
  line-height: 1.4rem;
}

a::selection,
p::selection,
h1::selection,
h2::selection,
h3::selection,
h4::selection,
h5::selection,
h6::selection,
ul::selection,
li::selection,
b::selection,
span::selection {
  background-color: var(--color-accent);
  color: #0f172a;
}

/* I will use the underlay class to add hue to background color */
.underlay {
  position: fixed;
  background-color: #172554;
  /* The background color gives the .underlay a dark blue hue, and the opacity makes it semi-transparent, letting the body background color show through. */
  opacity: 0.15;
  /* now I will use a special property called inset, that allows us to set the left, right, top and bottom position locations all in one style, and I want them all to be 0, what it will do is cover the whole page with green. In more simpler terms, The inset shorthand is equivalent to setting top: 0;, right: 0;, bottom: 0;, and left: 0;. It ensures that the .underlay covers the entire viewport. */
  inset: 0;

}

header,
main,
footer {
  /* position: relative?
This allows you to apply z-index. Without position (or with static positioning), z-index would have no effect.
It ensures the elements (header, main, footer) stay in their flow in the document, but they can be layered above the .underlay. */
  position: relative;
  /* z-index determines the stacking order of elements:
Higher z-index values appear in front of lower ones.
The default z-index is auto (or 0 in some cases).
Since .underlay does not have a z-index, it is at the default level.
Elements with a z-index of 10 (e.g., header, main, footer) will appear above the .underlay. */
  z-index: 10;

}

/* now, I intend that when someone highlightes the text on my page, it color changes, and I also want an accent color that will make my icons to have a color that make them standout. So, to do that, I am gonna use CSS variables, so I don't have to repeatedly type out the colors by myself.   */

/* now I will target the h1 and h4 in the header, as well as create a class that will change the color of its related element. */

/* I will turn the header into a flexible container and arrange the items in it in a column.  */
header {
  display: flex;
  flex-direction: column;
  gap: 1rem;
  max-width: 500px;
  align-items: baseline;
}

header h1,
header h4,
.lighter-text {
  color: var(--color-highlight);
}



/* now I wanna remove the underline from the anchor tag in the header */
header a {
  text-decoration: none;
}

/* I wanna make the font a bit sleek in the header, which I will do using the font-weight property */

header h1 {
  font-weight: 900;
  text-transform: uppercase;

}

header h4 {
  font-weight: 400;

}

#header-p {
  max-width: 330px;
}

/* now it's time to style the main, we will do it by making it a flex container with column direction.  */
main {
  display: flex;
  flex-direction: column;
  gap: 4rem;

}

main h4 {
  color: var(--color-highlight);
  font-weight: 600;
}
/* now we will also make the sections themselves flex, and arrange the items in them in column direction and add a 2rem gap in them  */
section {
  display: flex;
  flex-direction: column;
  gap: 2rem;
}

section h2 {
  /* lets transform the each h2 element in the sections to uppercase  */
  text-transform: uppercase;
  font-size: 1.4rem;
  font-weight: 1000;
}

.social-link-container, .navbar {
  display: flex;
  align-items: center;
  gap: 1.4rem;
}

.social-link {
  font-size: 1.2rem;
  color: inherit;
  text-decoration: none;
  transition-duration: 200ms;
}

.social-link:hover {
  color: var(--color-accent);
}

.sticky-header {
  position: sticky;
  top: 0;
  padding: 1rem 0;

}

.sticky-header h2 {
  position: relative;
  z-index: 2; 
}

.sticky-header::before {
  content: '';
  position: absolute;
  inset: 0;
  background: #101a31;
  opacity: 0.9;
}

.about-content {
  display: flex;
  flex-direction: column;
  gap: 1.4rem;
}

.about-content p {
  font-size: 1.1rem;
}

.technicalskills-content h3 {
  color: #d1d6dc;
  opacity: 0.9;
  font-size: 1rem;
  font-weight: 400;
}

.technicalskills-content {
  display: flex;
  flex-direction: column;
  gap: 1.2rem;
}

.list-content {
  display: flex;
  flex-direction: column;
  padding-left: 1.2rem;
}

.anchor-text {
  color: var(--color-highlight);
  text-decoration: none;
  transition-duration: 200ms;
}

.anchor-text:hover {
  color: var(--color-accent);
}

.experience-content {
  display: flex;
  flex-direction: column;
  gap: 1rem;
}

.projects-content {
  display: flex;
  flex-direction: column;
  gap: 3rem;
}

.experience-card, .project-card {
  display: grid;
  grid-template-columns: repeat(1, minmax(0, 1fr));
  /* gap: 0.4rem; */
}

.experience-card {
  gap: 0.4rem;
}

.project-card {
gap: 0.1rem;
}


.experience-card h4 {
  text-transform: uppercase;
  font-size: 1.1rem;
  opacity: 0.7;
  color: #fcfafa;
}

.tenure {
  opacity: 0.7;
  text-transform: uppercase;
}

.experience-card p,
.tag p {
  font-size: 1rem;
}

.card-column {
  display: flex;
  flex-direction: column;
  gap: 0.5rem;
}

.tag-container {
  display: flex;
  flex-wrap: wrap;
  gap: 0.24rem 0.8rem;
  margin-bottom: 1.7rem;
  color: var(--color-accent);
}

.tag {
  border-radius: 0.26rem;
  padding: 0.25rem;
  background: rgba(45, 212, 191, 0.2);
}

/* now we will style images  */
.project-image-container {
  display: grid;
  max-width: 200px;
  place-items: center;
  aspect-ratio: 16 / 9;
  overflow: hidden;
  order: 2;
  border-radius: 0.5rem;
}

.project-image-container img {
  object-fit: cover;
width: 100%;
height: 100%;
}


.project-archive-link {
  position: relative;
  color: var(--color-highlight);
  text-decoration: none;
  transition-duration: 200ms;
  margin-right: auto;
 }

 .project-archive-link span {
  transition-duration: 200ms;

 }

 .project-archive-link:hover span {
 padding-left: 0.45rem;
}

.project-archive-link::after {
  content: '';
  position: absolute;
  left: 0;
  width: 100%;
  bottom: 0;
  height: 1.5px;
  background: transparent;
  opacity: 0.7;
  transition-duration: 230ms;
}

.project-archive-link:hover::after {
  background: var(--color-highlight);
}


footer {
  display: flex;
justify-content: space-evenly;
align-items: center;
gap: 2rem;
  padding-bottom: 2rem;
  width: 100%;
}

footer P {
  color:  #94a3b8;
}


.scroll-to-top {
text-decoration: none;
color: var(--color-accent);
background: transparent;
opacity: 0.5;
overflow: hidden;
border-radius: 100%;
transition-duration: 200ms;
}


.scroll-to-top i {
  text-decoration: none;
   padding: 0.9rem;
   color: var(--color-accent);
 
}

.scroll-to-top i:hover {
  color:  #0f172a;
  background: var(--color-background);
  
}


/* responsive design soon */
